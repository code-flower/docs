

GENERAL

- figure out how samples.json is going to be generated and served
  - generated by server, and then uploaded to s3?
- write a README for every module
- add reference to openssl self-signed certs for dev to docs README

CLIENT-WEB

- modify bundler to add watchify task and put handle error in the right place (like in portal-web)
- handle a param in the url (when linked from github via the extension)
- distinguish between the environment gulp is run in -- either LOCAL or REMOTE -- and the type of build -- PRODUCTION or DEVELOPMENT
  - the default 'gulp' command should maybe default to LOCAL / DEVELOPMENT
- maybe create a global var in the gulpfile for the SRC folder
- fix error that gets thrown when you delete a repo
- at the top of flower-languages, add name of repo as a link to the repo

SERVER

- deploy server via Docker
- need to handle the special case where cloc command produces no output because the repo has no code files (like this repo)
- maybe implement this: https://stackoverflow.com/questions/23914896/check-that-git-repository-exists
- clone specific branches: https://stackoverflow.com/questions/1778088/how-to-clone-a-single-branch-in-git

CHROME

- figure out how to go fullscreen
  - may need to make the request from inside the angular app
  - but in order to do that, need to deploy angular app to a live integration server
    - link angular app to existing server on digital ocean (or start a new server)
    - before that, need to implement s3 uploading for the frontend
- need to change the url in the location bar when user clicks on Codeflower

EMAILER

- separate the email function from the server and put it in a lambda function
- use the SDK for programmatic deployment

LOAD BALANCER

- figure out pw2
- do multiple servers/clusters
- add elasticity
- add awesome monitoring

LOAD TESTER

- bring in the load testing code I wrote for roofshoot

